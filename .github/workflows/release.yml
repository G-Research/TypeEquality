name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0 # so that NerdBank.GitVersioning has access to history
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 9.0.x
    - name: Build
      run: dotnet build
    - name: Test
      run: dotnet test

  nuget-pack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # so that NerdBank.GitVersioning has access to history
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.x
      - name: Build
        run: dotnet build --configuration Release
      - name: Pack
        run: dotnet pack --configuration Release
      - name: Upload NuGet artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: TypeEquality/bin/Release/TypeEquality.*.nupkg

  expected-pack:
    needs: [nuget-pack]
    runs-on: ubuntu-latest
    steps:
      - name: Download NuGet artifact
        uses: actions/download-artifact@v5
        with:
          name: nuget-package
      - name: Check NuGet contents
        # Verify that there is exactly one TypeEquality.*.nupkg in the artifact that would be NuGet published
        run: if [[ $(find . -maxdepth 1 -name 'TypeEquality.*.nupkg' -printf c | wc -c) -ne "1" ]]; then exit 1; fi

  all-required-checks-complete:
    needs: [build, expected-pack]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: G-Research/common-actions/check-required-lite@main
        with:
          needs-context: ${{ toJSON(needs) }}

  nuget-publish:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.fork && github.ref == 'refs/heads/master' }}
    needs: [all-required-checks-complete]
    environment: release
    permissions:
      id-token: write
      attestations: write
      contents: read
    steps:
      - name: Download NuGet artifact
        uses: actions/download-artifact@v5
        with:
          name: nuget-package
          path: downloaded
      - name: Obtain NuGet key
        uses: NuGet/login@d22cc5f58ff5b88bf9bd452535b4335137e24544
        id: login
        with:
            user: ${{ secrets.NUGET_USER }}
      - name: Publish NuGet package
        uses: G-Research/common-actions/publish-nuget@main
        with:
          package-name: TypeEquality
          nuget-key: ${{ steps.login.outputs.NUGET_API_KEY }}
          nupkg-dir: downloaded

  github-release:
    runs-on: ubuntu-latest
    if: ${{ !github.event.repository.fork && github.ref == 'refs/heads/master' }}
    needs: [all-required-checks-complete]
    environment: release
    permissions:
      contents: write
    steps:
      - name: Download NuGet artifact
        uses: actions/download-artifact@v5
        with:
          name: nuget-package
          path: downloaded
      - name: Compute tag
        id: compute-tag
        run: |
          FILE=$(find downloaded -maxdepth 2 -type f -name '*.nupkg' | head -n 1)
          TAG=$(basename "$FILE" .nupkg)
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
      - name: Create GitHub release
        uses: G-Research/common-actions/github-release@main
        with:
          tag: ${{ steps.compute-tag.outputs.tag }}
          target-commitish: ${{ github.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
